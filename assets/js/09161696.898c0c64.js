"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[5516],{4137:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>f});var i=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function n(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);r&&(i=i.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,i)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?n(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,i,o=function(e,r){if(null==e)return{};var t,i,o={},n=Object.keys(e);for(i=0;i<n.length;i++)t=n[i],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)t=n[i],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var a=i.createContext({}),l=function(e){var r=i.useContext(a),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},u=function(e){var r=l(e.components);return i.createElement(a.Provider,{value:r},e.children)},p="mdxType",v={inlineCode:"code",wrapper:function(e){var r=e.children;return i.createElement(i.Fragment,{},r)}},d=i.forwardRef((function(e,r){var t=e.components,o=e.mdxType,n=e.originalType,a=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(t),d=o,f=p["".concat(a,".").concat(d)]||p[d]||v[d]||n;return t?i.createElement(f,c(c({ref:r},u),{},{components:t})):i.createElement(f,c({ref:r},u))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var n=t.length,c=new Array(n);c[0]=d;var s={};for(var a in r)hasOwnProperty.call(r,a)&&(s[a]=r[a]);s.originalType=e,s[p]="string"==typeof e?e:o,c[1]=s;for(var l=2;l<n;l++)c[l]=t[l];return i.createElement.apply(null,c)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6805:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>a,contentTitle:()=>c,default:()=>v,frontMatter:()=>n,metadata:()=>s,toc:()=>l});var i=t(3117),o=(t(7294),t(4137));const n={id:"overview",title:"COMP 2650 - Overview",sidebar_label:"COMP-2650",slug:"/comp-2650/overview"},c=void 0,s={unversionedId:"comp-2650/overview",id:"comp-2650/overview",title:"COMP 2650 - Overview",description:"Course Title",source:"@site/courses/comp-2650/overview.md",sourceDirName:"comp-2650",slug:"/comp-2650/overview",permalink:"/wiki/courses/comp-2650/overview",draft:!1,editUrl:"https://github.com/UWindsorCSS/Wiki/tree/master/courses/comp-2650/overview.md",tags:[],version:"current",frontMatter:{id:"overview",title:"COMP 2650 - Overview",sidebar_label:"COMP-2650",slug:"/comp-2650/overview"},sidebar:"indexNav",previous:{title:"COMP-2560 - Advice",permalink:"/wiki/courses/comp-2560/advice"},next:{title:"COMP-2660 - Overview",permalink:"/wiki/courses/comp-2660/overview"}},a={},l=[{value:"Course Title",id:"course-title",level:2},{value:"Course Description",id:"course-description",level:2},{value:"Typical Course Offering",id:"typical-course-offering",level:2},{value:"Is a Textbook Required?",id:"is-a-textbook-required",level:2},{value:"Prerequisites",id:"prerequisites",level:2}],u={toc:l},p="wrapper";function v(e){let{components:r,...t}=e;return(0,o.kt)(p,(0,i.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"course-title"},"Course Title"),(0,o.kt)("p",null,'The title for COMP-2650 is "Computer Architecture I".'),(0,o.kt)("h2",{id:"course-description"},"Course Description"),(0,o.kt)("p",null,"This course covers fundamental concepts of digital design and CPU architecture. Topics covered include number systems, switching algebra, logic gates, circuit minimization combinational circuit, read-only memory, random-access memory, programmable logic, synchronous and asynchronous sequential circuits, latches, flip-flops, registers, counters, register transfer language. and CPU architecture overview. (Prerequisite: COMP-1400) (3 lecture hours and 1.5 laboratory hours a week)"),(0,o.kt)("h2",{id:"typical-course-offering"},"Typical Course Offering"),(0,o.kt)("p",null,"COMP-2650 is typically offered in all semesters."),(0,o.kt)("h2",{id:"is-a-textbook-required"},"Is a Textbook Required?"),(0,o.kt)("p",null,"No, while there is a textbook listed and you may find it helpful, it is not required to succeed in this course."),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("p",null,"COMP-1400 is the prerequisite for this class."))}v.isMDXComponent=!0}}]);